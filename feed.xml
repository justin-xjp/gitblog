<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom"><id>https://github.com/justin-xjp/gitblog</id><title>RSS feed of justin-xjp's gitblog</title><updated>2023-12-11T12:52:22.367178+00:00</updated><link href="https://github.com/justin-xjp/gitblog"/><link href="https://raw.githubusercontent.com/justin-xjp/gitblog/master/feed.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator><entry><id>https://github.com/justin-xjp/gitblog/issues/3</id><title>小爱（弱智）音箱的再就业</title><updated>2023-12-11T12:52:22.553615+00:00</updated><content type="html"><![CDATA[<p>小爱同学在家陪伴了老大老二的童年，也走出了行业发展的蜜月期，各大内容提供商分分捂紧口袋，大众也接受了知识付费的到来…</p>
<p>然而，我接受不了。老二现在每天都要听小爱同学放故事，这个七八年的老爷车也没个限制措施，往往一听就是几个小时，每次都翻来覆去的同样内容，所有人都能背下来了。这个倒也还好，直到一天，我在小爱那里听到一个字正腔圆且古板生硬的西游记故事，这朗读的人估计是播音一类专业的，嗓音挑不出什么。故事脚本的编剧就怀疑小学毕业没有了，理科生吗？也不注意播出效果。</p>
<p>忍无可忍下，我开始许愿，希望小爱同学能播放本地服务器上存的音频文件，毕竟手里还有个树莓1代在落灰。</p>
<p>我不是大牛，小牛都不是，我一向清楚，当我发现一个需要解决的问题，我一定不是唯一一个遇到的人，我一定不是第一个遇到的人，最有效的方法就是相信互联网，去找前人的智慧。赞美internet</p>
<p>首先是yihong0618的xiaogpt，搭配miservice在本地实现获取小爱同学对话内容的能力，bilibili上有个小象部落(github:  wxtcstt)，结合xiaogpt，解析对话内容，并用miservice推送音乐播放，代码还没有整理上来，等待中。</p>
<p>另一个思路是httpRandomMusic，利用的是注册开放平台，利用小米开放Api获取对话内容，并且通过官方渠道要小爱转到服务器获取内容，优势应该是能利用小爱的语音解析，缺点是租服务器？不存在的！这个作者巧妙的利用了本地服务搭建dns服务器，劫持解析注册api时填写的服务地址到本地ip，反正是自己用倒是挺巧妙的办法。</p>
]]></content><link href="https://github.com/justin-xjp/gitblog/issues/3" rel="alternate"/><category term="在家折腾"/><published>2023-11-22T10:15:31+00:00</published></entry><entry><id>https://github.com/justin-xjp/gitblog/issues/2</id><title>hello world</title><updated>2023-12-11T12:52:22.639785+00:00</updated><content type="html"><![CDATA[<h1>Hello World</h1>
<p>博客源于 <a href="https://github.com/yihong0618/gitblog/issues/177%EF%BC%8C%E4%BD%9C%E8%80%85%E4%B9%A6%E5%86%99%E8%BE%83%E4%B8%BA%E7%AE%80%E5%8D%95%E3%80%82%E9%9C%80%E5%B0%9D%E8%AF%95">https://github.com/yihong0618/gitblog/issues/177，作者书写较为简单。需尝试</a></p>
<p>除却按照上述教程更改信息外，要注意 token要申请 classic 的，开到workflow就可以了。用户名、邮箱的修改也不是在<code>env</code>里，注意以下位置就行。还是很简单的。</p>
<p><del>另外教程里有人开发了issues2md的备份插件，可以拿来用。</del> </p>
<p>原来作者将这个功能整合了。</p>
]]></content><link href="https://github.com/justin-xjp/gitblog/issues/2" rel="alternate"/><published>2023-11-21T05:20:54+00:00</published></entry><entry><id>https://github.com/justin-xjp/gitblog/issues/1</id><title>00 写在第一篇</title><updated>2023-12-11T12:52:22.716297+00:00</updated><content type="html"><![CDATA[<p>这个blog是从伊洪那里f过来的，原作者在生活中对GITHUB的应用使我印象深刻。无论是按年度将自己记录在git，还是其他的开发项目，感谢作者的分享。yihong0618的miaoGPT和meservice也是非常喜欢的应用。</p>
<hr />
<p>我是后知后觉的把github和twitter上的人统一了起来。</p>
<p>说起来也巧，我也是学机械的，初中高中很喜欢计算机，甚至在我那个上学的年代，计算机专业刚刚热起来。高考时就犹豫过是否要学习计算机专业，记得当时有个“榜样”很坚定的选了“数学”，我也就有样学样，坚定了“物理”，报了工程力学的专业，把计算机留给了兴趣。</p>
<p>毕业以后，从机械转到了土木行业，计算机的应用成了我调剂生活的兴趣。生活中还是要有些兴趣的，我很高兴没有让工作毁了它。</p>
<hr />
<p>扯远了</p>
<p>关于blog，我先后在搜狐、网易尝试过，然后丢掉了大部分的内容，转用hexo，pelican。前阵子，在raspberry pi上，我觉得dokuwiki也很好。但其实一直在纠结于工具。</p>
<p>其实一直一来，工具都不是最重要的。blog重要的在于书写，开始书写，立刻书写。从现在，随时随地的。</p>
<hr />
<p>尴尬了，刚刚把第一篇当作pull requests 发给原作者了。</p>
]]></content><link href="https://github.com/justin-xjp/gitblog/issues/1" rel="alternate"/><published>2023-11-21T04:47:28+00:00</published></entry></feed>